/*
    문제 :
    
    아래의 실행문 중 지역변수와 전역변수가 무엇인지 구분하고, 지역변수와 지역변수를 정의하세요.

    단, 여기서의 정의는 단순히 개념이 아닌 내가 이해하고 있는 언어로 바꾸어 정의할 것
    또한, 이렇게 나만의 바꾼 언어를 다른 사람도 이해가 가능한지 확인할 것
    이는 앞으로의 모든 정의 문제에 똑같이 적용됩니다.
*/

let engine = false  //--> 전역변수 engine 선언

function on() {
    let engine = true;  //-->  지역변수 engine 선언
    return engine
}

console.log(on()) // true  -->  함수 on 안에있는 지역변수 engine 을 반환해준 것이기에 함수 on 을 실행시켜준 것은 true가 나옵니다
console.log(engine) // false  -->  전역변수 engine 이기에 가장 상단에 선언해줬던 false가 나옵니다

/*
    전역변수는 전역스코프에 저장되고, 코드 내 전역으로 사용될 수 있고 언제 어느 줄에서든지 재사용이 가능한 변수입니다.
    하지만 전역변수는 이렇게 지역변수처럼 가비지 콜렉터 없이 전역적으로 사용되고, 계속 유지되고 사용되는 변수이기에 메모리(용량)가 더 많이 사용됩니다.
    (전역변수 막 남발해서 사용해주면 좋지 않다  -->  메모리가 낭비될 수 있다)

    지역변수는 지역스코프에 저장되고, 전역변수보다 우선순위가 높습니다.
    (지역변수와 전역변수가 같은 이름으로 선언해줬다면, 지역변수를 선언해준 코드블럭 내에서는 지역변수가 우선순위가 높기 때문에 지역변수로 평가됩니다)
    그리고 지역변수는 코드블럭 내에서면 유효한 변수입니다. (코드 블럭 바깥으로 반환해줬다고 해도, 새로운 변수에 담아줘야 지역변수의 값을 사용할 수 있기 때문에, 지역변수는
    코드블럭 내에서 사용되고 사라진다고, 사용되지 않는다고 볼 수 있습니다)
    -->  그래서 지역변수는 "가비지 컬렉터" 라고 하는 것이 작용됩니다  -->  지역스코프(코드블럭) 밖으로 나가면 더이상 유효하지 않은 값이됩니다 (메모리가 해제됩니다)
*/
