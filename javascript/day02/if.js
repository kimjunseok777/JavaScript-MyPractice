
// 조건문  :  특정한 조건이 있을 때 실행하는 문법

let a = 3;
if(a > 2) { //--> true 이기에 실행
    console.log(`a의 값은 ${a} 입니다`)
    /*
        문자열에 특정한 변수를 사용하고 싶다면
        console.log("a는 값이", a ,"입니다")  -->  "콤마" 로 문자열에 변수를 함께 적은 것
        console.log("a는 값이"+ a +"입니다")  -->  "더하기" 로 문자열에 변수를 함께 적은 것
            -> 이런식으로 콤마(,) 와 플러스(+)를 사용하는 방법이 있다, 하지만 지저분하다
            -> 빽틱(`) 을 사용해줘서 문자열과 변수를 함께 기재해주는 것이 좋다
            -> ex ) '문자열 ${변수} 문자열'
    */
}

if(a) {
    console.log(a)
    //a의 값이 있기 때문에, true 이기에 실행한다
}

// 실행 방법이 2가지 이상으로 나눠지는 것 (조건일 때, 조건이 아닐 때) (복수 조건식)
if(a) {
    // 만약에 트루면
    console.log("만약에 트루면")
} else if(a>2) {
    // 아니면 만약에 (if 가 거짓이면 실행)
    console.log("아니면 만약에")
} else {
    // 아니면
    console.log("아니면")
}


let num = 0;
let answer;  //--> undefined 이다(값을 지정해주지 않았기 때문)

if(num > 0) {
    answer = "양수"
} else {
    answer = "음수"
}
console.log(answer)  //--> 답은 "음수" 이다

//------------------------------------------

if (num > 0) {
    answer = "양수"
} else if (num === 0 ) {
    answer = "0"    // -> "===" 으로 "일치비교" 를 해줬다. 그래서 값(0)과 데이터유형(숫자) 모두 같기 때문에 true 이다
} else {
    answer = "음수"
}
console.log(answer) //--> 답은 "0" 이 나온다  -->  중간에 num === 0 조건식이 true 이기 때문에 실행 (answer = "음수") 하고 if문 종료

// 위에 것을 간단한 연산을 나타낼 때 사용하는 "삼항연산자" 로 표현한 것 :
    num > 0 ? "양수" : "음수"  // --> 거짓이기 때문에 오른쪽에 있는 "음수" 가 답이다
        // -> 간단한 것이기에 삼항 연산자 OK

    num > 0 ? "양수" : num === 0 ? "0" : "음수"  // --> 거짓, 참 순이기에 답은 "0" 이다
        /*
            풀이해보자면, num 이 0보다 커? 그러면 양수, 하지만 거짓이라면
            num === 0 ? "0" : "음수" 식으로 넘어간다
            --> 벌써부터 항이 많아져서 가독성이 안좋아지는 것을 볼 수 있다
        */

    // if문은 분기에 따라 실행해야하는 코드가 나뉘어질 때
    // ( 만약에 ) ( 아니면 만약에... ) ( 아니면 ) --> 이런 식이다